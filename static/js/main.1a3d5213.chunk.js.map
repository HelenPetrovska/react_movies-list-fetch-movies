{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","API_URL","getMovie","title","a","fetch","response","json","FindMovie","addMovie","hasAddError","useState","setMovie","query","setQuery","hasError","setError","getMovieFromServer","movieFromServer","onSubmit","event","preventDefault","handleSubmit","htmlFor","type","value","id","placeholder","onChange","target","onClick","style","color","App","setMovies","setAddError","some","film","prev","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1a3d5213.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'http://www.omdbapi.com/?apikey=6279e07f&t=';\n\nexport async function getMovie(title: string): Promise<Movie> {\n  const response = await fetch(`${API_URL}${title}`);\n\n  return response.json();\n}\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie:(movie: Movie) => void;\n  hasAddError: boolean;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  addMovie,\n  hasAddError,\n}) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [hasError, setError] = useState(false);\n\n  const getMovieFromServer = async () => {\n    const movieFromServer = await getMovie(query);\n\n    if (!movieFromServer.Title) {\n      setError(true);\n\n      return;\n    }\n\n    setMovie(movieFromServer);\n    setError(false);\n  };\n\n  const handleSubmit = (event:FormEvent) => {\n    event.preventDefault();\n\n    if (movie) {\n      addMovie(movie);\n      setMovie(null);\n      setQuery('');\n    }\n  };\n\n  const changeQuery = (event:ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={(event) => handleSubmit(event)}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              value={query}\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${hasError && 'is-danger'}`}\n              onChange={changeQuery}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => getMovieFromServer()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard\n            movie={movie}\n          />\n        </div>\n      )}\n\n      {hasAddError && (\n        <p style={{ color: 'red' }}>\n          This movie has already been added to the list\n        </p>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\n\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [hasAddError, setAddError] = useState(false);\n\n  const addMovie = (movie: Movie) => {\n    if (!movies.some(film => film.imdbID === movie.imdbID)) {\n      setMovies(prev => [\n        ...prev,\n        movie,\n      ]);\n    } else {\n      setAddError(true);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n          hasAddError={hasAddError}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}